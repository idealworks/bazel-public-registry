load("//bzl:custom_generators.bzl", "generate_list_txt")

filegroup(
    name = "linux_audit_h",
    srcs = ["linux/audit.h"],
)

generate_list_txt(
    name = "audit_type_list_txt",
    output_txt = "audit_type-list.txt",
    script = "sd-journal/generate-audit_type-list.sh",
    script_args = [
        "//:config_h_file",
        "//src/basic:missing_audit_h",
        "linux/audit.h",
    ],
)

filegroup(
    name = "audit_type_to_name_awk",
    srcs = ["sd-journal/audit_type-to-name.awk"],
)

genrule(
    name = "audit_type_to_name_h",
    srcs = [
        ":audit_type_list_txt",
        ":audit_type_to_name_awk",
    ],
    outs = ["audit_type-to-name.h"],
    cmd = "awk -f $(locations :audit_type_to_name_awk) $(location :audit_type_list_txt) > \"$@\"",
)

cc_library(
    name = "libsystemd",
    srcs = [
        "sd-bus/bus-common-errors.c",
        "sd-bus/bus-container.c",
        "sd-bus/bus-control.c",
        "sd-bus/bus-convenience.c",
        "sd-bus/bus-creds.c",
        "sd-bus/bus-dump.c",
        "sd-bus/bus-error.c",
        "sd-bus/bus-internal.c",
        "sd-bus/bus-introspect.c",
        "sd-bus/bus-kernel.c",
        "sd-bus/bus-match.c",
        "sd-bus/bus-message.c",
        "sd-bus/bus-objects.c",
        "sd-bus/bus-signature.c",
        "sd-bus/bus-slot.c",
        "sd-bus/bus-socket.c",
        "sd-bus/bus-track.c",
        "sd-bus/bus-type.c",
        "sd-bus/sd-bus.c",
        "sd-daemon/sd-daemon.c",
        "sd-device/device-enumerator.c",
        "sd-device/device-filter.c",
        "sd-device/device-monitor.c",
        "sd-device/device-private.c",
        "sd-device/device-util.c",
        "sd-device/sd-device.c",
        "sd-event/event-util.c",
        "sd-event/sd-event.c",
        "sd-hwdb/sd-hwdb.c",
        "sd-id128/id128-util.c",
        "sd-id128/sd-id128.c",
        "sd-journal/audit-type.c",
        "sd-journal/catalog.c",
        "sd-journal/journal-file.c",
        "sd-journal/journal-send.c",
        "sd-journal/journal-vacuum.c",
        "sd-journal/journal-verify.c",
        "sd-journal/lookup3.c",
        "sd-journal/mmap-cache.c",
        "sd-journal/sd-journal.c",
        "sd-json/json-util.c",
        "sd-json/sd-json.c",
        "sd-login/sd-login.c",
        "sd-netlink/netlink-genl.c",
        "sd-netlink/netlink-message.c",
        "sd-netlink/netlink-message-nfnl.c",
        "sd-netlink/netlink-message-rtnl.c",
        "sd-netlink/netlink-slot.c",
        "sd-netlink/netlink-socket.c",
        "sd-netlink/netlink-types.c",
        "sd-netlink/netlink-types-genl.c",
        "sd-netlink/netlink-types-nfnl.c",
        "sd-netlink/netlink-types-rtnl.c",
        "sd-netlink/netlink-util.c",
        "sd-netlink/sd-netlink.c",
        "sd-network/network-util.c",
        "sd-network/sd-network.c",
        "sd-path/path-lookup.c",
        "sd-path/sd-path.c",
        "sd-resolve/sd-resolve.c",
        "sd-varlink/sd-varlink.c",
        "sd-varlink/sd-varlink-idl.c",
        "sd-varlink/varlink-io.systemd.c",
        "sd-varlink/varlink-org.varlink.service.c",
        "sd-varlink/varlink-util.c",
    ] + glob(["**/*.h"]) + [":audit_type_to_name_h"],
    hdrs = [":audit_type_to_name_h"],
    defines = [
        "DEFAULT_TIMEOUT_SEC=90",
        "UDEVLIBEXECDIR=\\\"/usr/lib/udev\\\"",
        "HAVE_GCRYPT=0",
        "CATALOG_DATABASE=\\\"/var/lib/systemd/catalog/database\\\"",
        "USER_DATA_UNIT_DIR=\\\"/usr/lib/systemd/user\\\"",
        "USER_CONFIG_UNIT_DIR=\\\"/etc/systemd/user\\\"",
        "SYSTEM_CONFIG_UNIT_DIR=\\\"/etc/systemd/system\\\"",
        "SYSTEM_DATA_UNIT_DIR=\\\"/usr/lib/systemd/system\\\"",
        "LIBDIR=\\\"/usr/lib\\\"",
        "PREFIX_NOSLASH=\\\"/usr\\\"",
        "SYSTEM_GENERATOR_DIR=\\\"/usr/lib/systemd/system-generators\\\"",
        "USER_GENERATOR_DIR=\\\"/usr/lib/systemd/user-generators\\\"",
        "SYSTEM_ENV_GENERATOR_DIR=\\\"/usr/lib/systemd/system-environment-generators\\\"",
        "USER_ENV_GENERATOR_DIR=\\\"/usr/lib/systemd/user-environment-generators\\\"",
    ],
    includes = [
        ".",
        "sd-id128/",
        "sd-json/",
        "sd-netlink/",
        "sd-network/",
        "src/libsystemd/sd-event/",
    ],
    local_defines = ["BUILD_MODE_DEVELOPER=0"],
    visibility = ["//visibility:public"],
    deps = [
        "//src/basic",
        "//src/systemd",
    ],
)
