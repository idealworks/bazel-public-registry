module(
    name = "com_github_mvukov_rules_ros2",
    version = "2.0.0.eddy.7",
)

bazel_dep(name = "asio", version = "1.31.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "boringssl", version = "0.0.0-20240530-2db0eb3")
bazel_dep(name = "curl", version = "8.8.0.bcr.1")
bazel_dep(name = "eigen", version = "3.4.0")
bazel_dep(name = "fmt", version = "10.2.1.bcr.1")
bazel_dep(name = "libyaml", version = "0.2.5")
bazel_dep(name = "lz4", version = "1.9.4")
bazel_dep(name = "nlohmann_json", version = "3.11.3")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "pybind11_bazel", version = "2.13.6")
bazel_dep(name = "re2", version = "2024-07-02")  # this is only here to force graph to resolve to higher res2 version compatible with pybind11_bazel above. Remove once no longer needed.
bazel_dep(name = "rules_cc", version = "0.1.0")
bazel_dep(name = "rules_foreign_cc", version = "0.14.0")
bazel_dep(name = "rules_python", version = "1.2.0")

# bazel_dep(name = "rules_rust", version = "0.49.3")
bazel_dep(name = "spdlog", version = "1.14.1")
bazel_dep(name = "sqlite3", version = "3.42.0.bcr.1")
bazel_dep(name = "tinyxml", version = "2.6.2.iw.1")
bazel_dep(name = "tinyxml2", version = "10.0.0")
bazel_dep(name = "websocketpp", version = "0.8.2")
bazel_dep(name = "yaml-cpp", version = "0.8.0")
bazel_dep(name = "zlib", version = "1.3.1.bcr.3")
bazel_dep(name = "zstd", version = "1.5.6")

bazel_dep(name = "googletest", version = "1.15.2", dev_dependency = True)

bazel_dep(name = "ros2_rosidl", version = "4.6.4-3-g5d91679.iw.jazzy.1")
bazel_dep(name = "ros2_rosidl_typesupport", version = "3.2.2-1-gb43c945.iw.jazzy.1")
bazel_dep(name = "ros2_rosidl_python", version = "0.22.0-1-gf016c30.iw.jazzy.1")
bazel_dep(name = "ros2cli", version = "0.32.1-3-geab6c97.iw.jazzy.1")
# bazel_dep(name = "ros2_ament_cmake_ros", version = "0.10.0.iw.1")
# bazel_dep(name = "ros2_launch_ros", version = "0.19.7.iw.1")

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# http_archive(
#     name = "ros2_rust",
#     build_file = "@com_github_mvukov_rules_ros2//repositories:ros2_rust.BUILD.bazel",
#     patch_args = ["-p1"],
#     patches = [
#         "@com_github_mvukov_rules_ros2//repositories/patches:ros2_rust_fix_rcl_bindings.patch",
#         "@com_github_mvukov_rules_ros2//repositories/patches:ros2_rust_fix_rosidl_generator.patch",
#         "@com_github_mvukov_rules_ros2//repositories/patches:ros2_rust_no_msg_vendoring.patch",
#     ],
#     sha256 = "ec3ebfb177f0ecfc2c6ecb47f2fffe701f6ebeb2b29ab482b57b53dd2c260da2",
#     strip_prefix = "ros2_rust-2e746d6e0d2cbeed811132310c3a8dc2da4f9975",
#     urls = ["https://github.com/ros2-rust/ros2_rust/archive/2e746d6e0d2cbeed811132310c3a8dc2da4f9975.zip"],
# )
#
# # https://github.com/bazelbuild/rules_rust/pull/2698
# http_archive(
#     name = "com_github_mvukov_rules_ros2_cargo_bazel",
#     build_file_content = 'exports_files(["cargo-bazel"])',
#     sha256 = "6d6d68b898b38cb58d3c29e2e54d5795e2f652ebcac1ecf3bb0ac99fc86480e7",
#     url = "https://github.com/mvukov/rules_rust/releases/download/0.46.0-mvukov-cargo-bazel/cargo-bazel.zip",
# )

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    is_default = True,
    python_version = "3.12",
)
use_repo(python, rules_ros2_pythons = "python_versions")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

# Include numpy headers, which is unconditionally required by all
# ros2_py_interface_library targets.
ADDITIVE_BUILD_CONTENT_NUMPY = """\
cc_library(
    name = "numpy_lib",
    hdrs = glob(["site-packages/numpy/_core/include/numpy/**/*.h"]),
    includes = ["site-packages/numpy/_core/include/"],
    visibility = ["//visibility:public"],
)
"""

pip.whl_mods(
    additive_build_content = ADDITIVE_BUILD_CONTENT_NUMPY,
    data = [":numpy_lib"],
    hub_name = "whl_mods_hub",
    whl_name = "numpy",
)
use_repo(pip, "whl_mods_hub")
pip.parse(
    extra_hub_aliases = {
        "numpy": ["numpy_lib"],
    },
    hub_name = "rules_ros2_pip_deps_x86_64",
    python_version = "3.12",
    requirements_lock = "//:requirements_lock.txt",
    whl_modifications = {
        "@whl_mods_hub//:numpy.json": "numpy",
    },
)
pip.parse(
    download_only = True,
    extra_hub_aliases = {
        "numpy": ["numpy_lib"],
    },
    extra_pip_args = [
        "--platform",
        "linux_x86_64",
        "--platform",
        "manylinux2014_aarch64",
    ],
    hub_name = "rules_ros2_pip_deps_aarch64",
    python_version = "3.12",
    requirements_lock = "//:requirements_lock.txt",
    whl_modifications = {
        "@whl_mods_hub//:numpy.json": "numpy",
    },
)
use_repo(pip, "rules_ros2_pip_deps_x86_64")
use_repo(pip, "rules_ros2_pip_deps_aarch64")

dev_pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip", dev_dependency = True)
dev_pip.parse(
    hub_name = "rules_ros2_resolver_deps",
    python_version = "3.12",
    requirements_lock = "//repositories/private:resolver_requirements_lock.txt",
)
use_repo(dev_pip, "rules_ros2_resolver_deps")

pybind_configure = use_extension("@pybind11_bazel//:internal_configure.bzl", "internal_configure_extension")
use_repo(pybind_configure, "pybind11")

# crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")
# crate.from_cargo(
#     name = "rules_ros2_crate_index",
#     cargo_lockfile = "@com_github_mvukov_rules_ros2//repositories/rust:Cargo.lock",
# )
# use_repo(crate, "rules_ros2_crate_index")
